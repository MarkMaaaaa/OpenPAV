{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Open-PAV Open-PAV (Open Product Automated Vehicle) is an open platform designed to facilitate data collection, model calibration, and simulation of producted automated vehicle behaviors. It integrates diverse datasets and calibrated vehicle models, making it an essential tool for researchers and developers aiming to study product automated vehicle (PAV) dynamics and their impacts. The project encourages contributions from the research community and provides ready-to-use model parameters for seamless integration with simulation tools. Key Features Comprehensive Data Repository Collects and organizes data from PAVs, including LiDAR, images, videos, and trajectory data (We have summarized 14 AV brands, 33 AV models in 13 Open-source AV Datasets from 6 AV Data Providers, Dataset Publication ). Provides datasets in a unified vectorized format for efficient access and analysis. AV Model Calibration Supports linear models, IDM models (for SUMO), Wiedemann-99 (for Vissim), and machine learning-based models. Includes pre-configured model parameters for direct use in traditional simulation software. Multiple Simulator Integrations Enables rapid and accurate simulation of automated vehicle behavior and analysis of their impacts. Community Collaboration Designed to foster contributions and collaboration among researchers globally. What's New March 2025 Model Enhancements: Improved calibration modeling methodology. Simulation Integration: Configured packages for SUMO, VISSIM, and basic parameters for models. December 2024 Dataset Expansion: Added new open-source trajectory datasets from ULTRA datasets. Model Enhancements: Improved basic logic for the project. November 2024 Project Startup: Comprehensive installation and user guides are now available. Major Components Data Repository : A unified storage of diverse datasets (LiDAR, images, videos, trajectories). Model Calibration Tools : Utilities to calibrate vehicle kinematic models and export them for simulation. Simulator Integration : Pre-configured packages for SUMO, VISSIM, and other platforms. For more details, refer to the Open-PAV Documentation .","title":"Overview"},{"location":"#open-pav","text":"Open-PAV (Open Product Automated Vehicle) is an open platform designed to facilitate data collection, model calibration, and simulation of producted automated vehicle behaviors. It integrates diverse datasets and calibrated vehicle models, making it an essential tool for researchers and developers aiming to study product automated vehicle (PAV) dynamics and their impacts. The project encourages contributions from the research community and provides ready-to-use model parameters for seamless integration with simulation tools.","title":"Open-PAV"},{"location":"#key-features","text":"Comprehensive Data Repository Collects and organizes data from PAVs, including LiDAR, images, videos, and trajectory data (We have summarized 14 AV brands, 33 AV models in 13 Open-source AV Datasets from 6 AV Data Providers, Dataset Publication ). Provides datasets in a unified vectorized format for efficient access and analysis. AV Model Calibration Supports linear models, IDM models (for SUMO), Wiedemann-99 (for Vissim), and machine learning-based models. Includes pre-configured model parameters for direct use in traditional simulation software. Multiple Simulator Integrations Enables rapid and accurate simulation of automated vehicle behavior and analysis of their impacts. Community Collaboration Designed to foster contributions and collaboration among researchers globally.","title":"Key Features"},{"location":"#whats-new","text":"March 2025 Model Enhancements: Improved calibration modeling methodology. Simulation Integration: Configured packages for SUMO, VISSIM, and basic parameters for models. December 2024 Dataset Expansion: Added new open-source trajectory datasets from ULTRA datasets. Model Enhancements: Improved basic logic for the project. November 2024 Project Startup: Comprehensive installation and user guides are now available.","title":"What's New"},{"location":"#major-components","text":"Data Repository : A unified storage of diverse datasets (LiDAR, images, videos, trajectories). Model Calibration Tools : Utilities to calibrate vehicle kinematic models and export them for simulation. Simulator Integration : Pre-configured packages for SUMO, VISSIM, and other platforms. For more details, refer to the Open-PAV Documentation .","title":"Major Components"},{"location":"installation/","text":"Installation Guide Requirements Hardware Requirements CPU : Minimum 4 cores (Intel i5 or higher recommended) RAM : At least 8GB (16GB recommended for simulations) Storage : Minimum 10GB free space GPU (Optional, for AI-based models): NVIDIA GPU with CUDA support (e.g., RTX 3060 or higher) Software Requirements Operating System : Ubuntu 20.04/22.04 or Windows 10/11 Python : Version 3.8 or later Git : Installed and configured SUMO (Optional): Required for traffic simulation VISSIM (Optional): Required for advanced microscopic simulation PyTorch (Optional): Required for AI-based model testing Local Installation Step 1: Clone the Open-PAV Repository Use Git to download the Open-PAV source code: git clone https://github.com/MarkMaaaaa/OpenPAV.git cd OpenPAV Step 2: Install Dependencies Ensure Python and necessary packages are installed: pip install -r requirements.txt Step 3: Basic Test Environment Run a simple Python simulation to verify the installation: import numpy as np import matplotlib.pyplot as plt # Simple vehicle motion simulation t = np.linspace(0, 10, 100) velocity = 2 * t # Linear acceleration position = 0.5 * 2 * t**2 plt.plot(t, position, label=\"Vehicle Position\") plt.xlabel(\"Time (s)\") plt.ylabel(\"Position (m)\") plt.legend() plt.grid() plt.show() If the plot appears, your environment is ready. Optional Components Option 1: Install SUMO For SUMO users, install it as follows: Ubuntu: sudo apt-get install sumo sumo-tools sumo-doc Windows: - Download from SUMO Official Website - Add SUMO to system PATH Option 2: Install VISSIM VISSIM is a commercial tool, and a valid license is required. Install from PTV Group Website : https://www.ptvgroup.com Configure the Python COM interface for integration. Option 3: Install PyTorch (Optional for AI-based Models) For machine learning applications, install PyTorch: CPU Version: pip install torch torchvision torchaudio GPU Version (with CUDA): pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu118","title":"Installation"},{"location":"installation/#installation-guide","text":"","title":"Installation Guide"},{"location":"installation/#requirements","text":"","title":"Requirements"},{"location":"installation/#hardware-requirements","text":"CPU : Minimum 4 cores (Intel i5 or higher recommended) RAM : At least 8GB (16GB recommended for simulations) Storage : Minimum 10GB free space GPU (Optional, for AI-based models): NVIDIA GPU with CUDA support (e.g., RTX 3060 or higher)","title":"Hardware Requirements"},{"location":"installation/#software-requirements","text":"Operating System : Ubuntu 20.04/22.04 or Windows 10/11 Python : Version 3.8 or later Git : Installed and configured SUMO (Optional): Required for traffic simulation VISSIM (Optional): Required for advanced microscopic simulation PyTorch (Optional): Required for AI-based model testing","title":"Software Requirements"},{"location":"installation/#local-installation","text":"","title":"Local Installation"},{"location":"installation/#step-1-clone-the-open-pav-repository","text":"Use Git to download the Open-PAV source code: git clone https://github.com/MarkMaaaaa/OpenPAV.git cd OpenPAV","title":"Step 1: Clone the Open-PAV Repository"},{"location":"installation/#step-2-install-dependencies","text":"Ensure Python and necessary packages are installed: pip install -r requirements.txt","title":"Step 2: Install Dependencies"},{"location":"installation/#step-3-basic-test-environment","text":"Run a simple Python simulation to verify the installation: import numpy as np import matplotlib.pyplot as plt # Simple vehicle motion simulation t = np.linspace(0, 10, 100) velocity = 2 * t # Linear acceleration position = 0.5 * 2 * t**2 plt.plot(t, position, label=\"Vehicle Position\") plt.xlabel(\"Time (s)\") plt.ylabel(\"Position (m)\") plt.legend() plt.grid() plt.show() If the plot appears, your environment is ready.","title":"Step 3: Basic Test Environment"},{"location":"installation/#optional-components","text":"","title":"Optional Components"},{"location":"installation/#option-1-install-sumo","text":"For SUMO users, install it as follows: Ubuntu: sudo apt-get install sumo sumo-tools sumo-doc Windows: - Download from SUMO Official Website - Add SUMO to system PATH","title":"Option 1: Install SUMO"},{"location":"installation/#option-2-install-vissim","text":"VISSIM is a commercial tool, and a valid license is required. Install from PTV Group Website : https://www.ptvgroup.com Configure the Python COM interface for integration.","title":"Option 2: Install VISSIM"},{"location":"installation/#option-3-install-pytorch-optional-for-ai-based-models","text":"For machine learning applications, install PyTorch: CPU Version: pip install torch torchvision torchaudio GPU Version (with CUDA): pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu118","title":"Option 3: Install PyTorch (Optional for AI-based Models)"},{"location":"model_calibration/","text":"Model Calibration Open-PAV provides tools for calibrating various vehicle kinematic models: Supported Models Linear Models : Suitable for basic simulations. IDM Models : Ideal for SUMO simulations. Wiedemann-99 : Compatible with Vissim. Machine Learning-Based Models : For advanced simulations. Calibration Steps Data Input : Load your collected data into the calibration tool. Parameter Adjustment : Adjust model parameters to fit the data. Validation : Validate the calibrated model against a test dataset. Export : Export the calibrated parameters for simulation use. For detailed calibration procedures, refer to the Developer Guide .","title":"Model Calibration"},{"location":"model_calibration/#model-calibration","text":"Open-PAV provides tools for calibrating various vehicle kinematic models:","title":"Model Calibration"},{"location":"model_calibration/#supported-models","text":"Linear Models : Suitable for basic simulations. IDM Models : Ideal for SUMO simulations. Wiedemann-99 : Compatible with Vissim. Machine Learning-Based Models : For advanced simulations.","title":"Supported Models"},{"location":"model_calibration/#calibration-steps","text":"Data Input : Load your collected data into the calibration tool. Parameter Adjustment : Adjust model parameters to fit the data. Validation : Validate the calibrated model against a test dataset. Export : Export the calibrated parameters for simulation use. For detailed calibration procedures, refer to the Developer Guide .","title":"Calibration Steps"},{"location":"model_download/","text":"Vehicle and Model Selection Use the form below to select your vehicle and algorithm model. The generated file will be available for download. Select Vehicle Model: --Select-- Tesla Audi Benz Select Algorithm Model: --Select-- Intelligent Driver Model (IDM) Linear Model Machine Learning Model Select Parameter File Type: --Select-- Original Parameters Vissim Parameters SUMO Parameters Generate and Download document.getElementById('modelForm').addEventListener('submit', async (e) => { e.preventDefault(); const vehicle = document.getElementById('vehicle').value; const algorithm = document.getElementById('algorithm').value; const filetype = document.getElementById('filetype').value; // Prepare data const data = { vehicle: vehicle, algorithm: algorithm, filetype: filetype, timestamp: new Date().toISOString() }; // Generate JSON file const blob = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' }); const url = window.URL.createObjectURL(blob); const link = document.createElement('a'); link.href = url; link.download = `${vehicle}-${algorithm}-${filetype}-parameters.json`; document.body.appendChild(link); link.click(); window.URL.revokeObjectURL(url); });","title":"Model Download"},{"location":"model_download/#vehicle-and-model-selection","text":"Use the form below to select your vehicle and algorithm model. The generated file will be available for download. Select Vehicle Model: --Select-- Tesla Audi Benz Select Algorithm Model: --Select-- Intelligent Driver Model (IDM) Linear Model Machine Learning Model Select Parameter File Type: --Select-- Original Parameters Vissim Parameters SUMO Parameters Generate and Download document.getElementById('modelForm').addEventListener('submit', async (e) => { e.preventDefault(); const vehicle = document.getElementById('vehicle').value; const algorithm = document.getElementById('algorithm').value; const filetype = document.getElementById('filetype').value; // Prepare data const data = { vehicle: vehicle, algorithm: algorithm, filetype: filetype, timestamp: new Date().toISOString() }; // Generate JSON file const blob = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' }); const url = window.URL.createObjectURL(blob); const link = document.createElement('a'); link.href = url; link.download = `${vehicle}-${algorithm}-${filetype}-parameters.json`; document.body.appendChild(link); link.click(); window.URL.revokeObjectURL(url); });","title":"Vehicle and Model Selection"},{"location":"quick_start/","text":"3. quick_start.md ```markdown Quick Start Get started with Open-PAV by following these steps: Installation : Ensure Open-PAV is installed on your system. Refer to the Installation Guide for instructions. Data Preparation : Prepare your datasets (LiDAR, images, videos, trajectories) and place them in the appropriate directories. Model Selection : Choose the desired vehicle model (e.g., Tesla, Audi, Benz) and the corresponding kinematic model (e.g., IDM, linear model, machine learning model). Model Calibration : Use the provided tools to calibrate the selected model with your data. Simulation Integration : Export the calibrated model parameters and integrate them into your preferred simulation platform (e.g., SUMO, Vissim). For more detailed instructions, consult the User Guide .","title":"Quick Start"},{"location":"quick_start/#quick-start","text":"Get started with Open-PAV by following these steps: Installation : Ensure Open-PAV is installed on your system. Refer to the Installation Guide for instructions. Data Preparation : Prepare your datasets (LiDAR, images, videos, trajectories) and place them in the appropriate directories. Model Selection : Choose the desired vehicle model (e.g., Tesla, Audi, Benz) and the corresponding kinematic model (e.g., IDM, linear model, machine learning model). Model Calibration : Use the provided tools to calibrate the selected model with your data. Simulation Integration : Export the calibrated model parameters and integrate them into your preferred simulation platform (e.g., SUMO, Vissim). For more detailed instructions, consult the User Guide .","title":"Quick Start"},{"location":"simulation_integration/","text":"Simulation Integration Integrate Open-PAV with various simulation platforms to simulate automated vehicle behaviors: Supported Platforms SUMO : Use IDM models with pre-configured parameters. Vissim : Utilize Wiedemann-99 models for accurate simulations. Other Platforms : Custom integration supported via exported model parameters. Integration Steps Model Calibration : Ensure your vehicle model is calibrated. Refer to the Model Calibration Guide . Parameter Export : Export the calibrated parameters in the required format (e.g., original parameters, Vissim parameter file, SUMO parameter file). Simulation Setup : Import the parameters into your simulation platform. Execution : Run the simulation to analyze vehicle behaviors. For comprehensive integration instructions, see the Developer Guide .","title":"Simulation Integration"},{"location":"simulation_integration/#simulation-integration","text":"Integrate Open-PAV with various simulation platforms to simulate automated vehicle behaviors:","title":"Simulation Integration"},{"location":"simulation_integration/#supported-platforms","text":"SUMO : Use IDM models with pre-configured parameters. Vissim : Utilize Wiedemann-99 models for accurate simulations. Other Platforms : Custom integration supported via exported model parameters.","title":"Supported Platforms"},{"location":"simulation_integration/#integration-steps","text":"Model Calibration : Ensure your vehicle model is calibrated. Refer to the Model Calibration Guide . Parameter Export : Export the calibrated parameters in the required format (e.g., original parameters, Vissim parameter file, SUMO parameter file). Simulation Setup : Import the parameters into your simulation platform. Execution : Run the simulation to analyze vehicle behaviors. For comprehensive integration instructions, see the Developer Guide .","title":"Integration Steps"}]}